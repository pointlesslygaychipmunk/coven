/* frontend/src/components/WeatherEffectsOverlay.css */
/* Redesigned weather effects with a whimsical, retro game feel */

.weather-overlay {
  position: absolute; /* Should be absolute within its parent frame */
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none; /* Click-through */
  z-index: 10; /* Above game content, below HUD */
  overflow: hidden;
  image-rendering: pixelated; /* Maintain pixel aesthetic */
  transition: background-color 2s ease-in-out; /* Smooth background transitions */
}

/* Base Time of Day Tint */
.time-overlay {
  position: absolute;
  inset: 0;
  transition: opacity 2s ease-in-out;
  z-index: 1; /* Base layer */
}
.time-overlay.day { background: transparent; opacity: 0; }
.time-overlay.night { background: linear-gradient(to bottom, rgba(26, 24, 36, 0.3), rgba(42, 36, 58, 0.5)); opacity: 0.5; } /* Subtle night tint */

/* Seasonal Tint Overlay */
.seasonal-overlay {
  position: absolute;
  inset: 0;
  mix-blend-mode: overlay; /* Subtle color blend */
  pointer-events: none;
  opacity: 0.15; /* Reduced opacity */
  transition: background-color 3s ease-in-out;
  z-index: 2; /* Above time tint */
}
.spring-overlay { background-color: #a5d6a7; } /* Light green */
.summer-overlay { background-color: #ffe082; } /* Light yellow */
.fall-overlay   { background-color: #ffcc80; } /* Light orange */
.winter-overlay { background-color: #bbdefb; } /* Light blue */

/* --- Weather Specific Effects --- */

/* Rain Effect (Pixelated Streaks) */
.rain-container { position: absolute; inset: 0; z-index: 3; }
.rain-drop {
  position: absolute;
  width: 1px; /* Thin drops */
  height: 10px;
  background: linear-gradient(to bottom, transparent, rgba(173, 216, 250, 0.7));
  animation: rain-fall var(--fall-duration, 0.6s) linear infinite;
  opacity: 0.8;
}
.weather-overlay.medium .rain-drop { height: 15px; width: 2px; background: linear-gradient(to bottom, transparent, rgba(173, 216, 250, 0.8)); }
.weather-overlay.heavy .rain-drop { height: 20px; width: 2px; background: linear-gradient(to bottom, transparent, rgba(173, 216, 250, 0.9)); }
.rain-drop.whimsical { /* Easter egg rain */
    background: linear-gradient(to bottom, transparent, rgba(181, 157, 196, 0.9)); /* Purple rain */
    box-shadow: 0 0 3px rgba(181, 157, 196, 0.5);
    animation: rain-fall var(--fall-duration, 0.8s) linear infinite, sparkle 1.5s ease-in-out infinite;
}
@keyframes rain-fall {
  from { transform: translateY(-100px) rotate(10deg); } /* Steeper angle */
  to { transform: translateY(calc(100vh + 100px)) rotate(10deg); }
}
@keyframes sparkle { 0%, 100% { filter: brightness(1); } 50% { filter: brightness(1.5); } }

/* Thunder Flash Effect */
.thunder-flash {
  position: absolute; inset: 0; background-color: rgba(240, 240, 255, 0);
  mix-blend-mode: screen; animation: thunder-flash 1s steps(4, end); z-index: 6; /* Above other weather */
}
@keyframes thunder-flash {
  0% { background-color: rgba(240, 240, 255, 0); }
  25% { background-color: rgba(240, 240, 255, 0.8); }
  50% { background-color: rgba(240, 240, 255, 0.2); }
  75% { background-color: rgba(240, 240, 255, 0.6); }
  100% { background-color: rgba(240, 240, 255, 0); }
}

/* Fog Effect (Layered) */
.fog-container { position: absolute; inset: 0; z-index: 3; }
.fog-layer {
  position: absolute; width: 250%; height: 35%; /* Wider layers */
  background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="200" height="100" viewBox="0 0 200 100"><defs><filter id="fogblur"><feGaussianBlur stdDeviation="8"/></filter></defs><rect width="200" height="100" fill="rgba(230, 230, 240, 0.5)" filter="url(%23fogblur)"/></svg>');
  background-size: 50% 100%;
  animation: fog-drift var(--drift-speed, 80s) linear infinite alternate;
  opacity: var(--layer-opacity, 0.4);
  background-repeat: repeat-x;
}
.fog-layer:nth-child(1) { bottom: 0; --drift-speed: 120s; --layer-opacity: 0.3; height: 40%; }
.fog-layer:nth-child(2) { bottom: 10%; --drift-speed: 90s; --layer-opacity: 0.4; animation-direction: alternate-reverse; height: 45%; }
.fog-layer:nth-child(3) { bottom: 25%; --drift-speed: 150s; --layer-opacity: 0.2; height: 50%; }
.weather-overlay.heavy .fog-layer { opacity: calc(var(--layer-opacity, 0.4) * 1.5); }
@keyframes fog-drift { from { transform: translateX(-20%); } to { transform: translateX(20%); } }


/* Wind Effect (Streaks & Leaves) */
.wind-container { position: absolute; inset: 0; z-index: 3; }
.wind-particle {
  position: absolute; width: 60px; height: 1px; /* Thinner streaks */
  background: linear-gradient(to right, transparent, rgba(240, 245, 255, 0.3), transparent);
  opacity: 0;
  animation: wind-movement var(--wind-duration, 1.5s) ease-out infinite;
}
.weather-overlay.medium .wind-particle { width: 90px; }
.weather-overlay.heavy .wind-particle { width: 130px; background: linear-gradient(to right, transparent, rgba(240, 245, 255, 0.5), transparent); }

.wind-leaf {
  position: absolute; width: 10px; height: 10px;
  background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 10 10"><path d="M5 0 C 8 2 10 5 8 8 C 6 10 3 10 2 7 C 0 5 2 2 5 0 Z" fill="rgba(140, 200, 100, 0.7)"/></svg>'); /* Simple leaf shape */
  background-size: contain; background-repeat: no-repeat;
  animation: leaf-float var(--leaf-duration, 7s) linear infinite;
  opacity: 0.8;
}
.weather-overlay.fall .wind-leaf { background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 10 10"><path d="M5 0 C 8 2 10 5 8 8 C 6 10 3 10 2 7 C 0 5 2 2 5 0 Z" fill="rgba(210, 130, 50, 0.7)"/></svg>'); } /* Orange leaf */
.weather-overlay.spring .wind-leaf { background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 8 8"><circle cx="4" cy="4" r="3" fill="rgba(255, 200, 220, 0.8)" /></svg>'); } /* Petal */

@keyframes wind-movement {
  0% { transform: translateX(-150px) rotate(-5deg); opacity: 0; }
  10%, 90% { opacity: 0.6; }
  100% { transform: translateX(calc(100vw + 150px)) rotate(5deg); opacity: 0; }
}
@keyframes leaf-float {
  0% { transform: translateX(-50px) translateY(0) rotate(0deg); opacity: 0; }
  10% { opacity: 0.8; }
  100% { transform: translateX(calc(100vw + 50px)) translateY(40vh) rotate(720deg); opacity: 0; }
}

/* Clear Night Effect (Stars) */
.clear-night-overlay { position: absolute; inset: 0; z-index: 3; }
.star {
  position: absolute; width: 1px; height: 1px; /* Tiny stars */
  background-color: white;
  border-radius: 50%; opacity: 0;
  box-shadow: 0 0 2px white; /* Subtle glow */
  animation: twinkle var(--twinkle-duration, 5s) infinite ease-in-out;
  animation-delay: var(--twinkle-delay, 0s);
}
.star.big { width: 2px; height: 2px; box-shadow: 0 0 4px white; }
.star.sparkle::after {
  content: '+'; /* Simple cross sparkle */
  position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%);
  font-size: 5px; color: rgba(255, 255, 255, 0.5); font-weight: bold;
  opacity: 0; animation: star-sparkle 5s infinite ease-in-out;
  animation-delay: calc(var(--twinkle-delay, 0s) + 1s);
}
@keyframes twinkle { 0%, 100% { opacity: 0.3; } 50% { opacity: 0.9; } }
@keyframes star-sparkle { 0%, 100% { opacity: 0; transform: translate(-50%, -50%) scale(0.8) rotate(0deg); } 10%, 30% { opacity: 1; transform: translate(-50%, -50%) scale(1.2) rotate(90deg); } 40% { opacity: 0; } }

/* Dry Effect (Dust Motes) */
.dry-overlay { position: absolute; inset: 0; background: linear-gradient(to bottom, rgba(240, 210, 160, 0.08), transparent 60%); z-index: 3; }
.dust-particle {
  position: absolute; width: 2px; height: 2px; /* Small dust */
  background-color: rgba(222, 184, 135, 0.5); /* Burlywood color */
  border-radius: 50%; opacity: 0;
  animation: dust-float var(--dust-duration, 12s) linear infinite;
}
@keyframes dust-float {
  0% { transform: translate(0, 0) scale(1); opacity: 0; }
  10%, 90% { opacity: 0.6; }
  100% { transform: translate(var(--wind-x, 40px), var(--wind-y, -20px)) scale(1); opacity: 0; }
}

/* Snow Effect */
.snow-container { position: absolute; inset: 0; z-index: 3; }
.snowflake {
  position: absolute; width: 4px; height: 4px; /* Small flakes */
  background-color: rgba(255, 255, 255, 0.9);
  border-radius: 50%; opacity: 0.9;
  box-shadow: 0 0 3px rgba(255, 255, 255, 0.5);
  animation: snowfall var(--snowfall-duration, 12s) linear infinite;
}
.weather-overlay.medium .snowflake { width: 5px; height: 5px; }
.weather-overlay.heavy .snowflake { width: 6px; height: 6px; opacity: 1; }
@keyframes snowfall {
  0% { transform: translateY(-20px) translateX(0); }
  100% { transform: translateY(calc(100vh + 20px)) translateX(var(--drift-x, 30px)); }
}

/* Fireflies */
.firefly {
  position: absolute; width: 3px; height: 3px;
  border-radius: 50%;
  background-color: rgba(220, 255, 180, 0.9); /* Yellow-green */
  box-shadow: 0 0 5px rgba(200, 255, 150, 0.8);
  opacity: 0;
  animation: firefly-float var(--float-duration, 20s) ease-in-out infinite, firefly-glow var(--glow-duration, 2.5s) ease-in-out infinite;
  z-index: 4; /* Above most weather */
}
@keyframes firefly-float { /* Simplified float */
  0% { transform: translate(0, 0); }
  25% { transform: translate(var(--x1, 60px), var(--y1, -40px)); }
  50% { transform: translate(var(--x2, -40px), var(--y2, 60px)); }
  75% { transform: translate(calc(var(--x1, 60px)/2), calc(var(--y2, 60px)/2)); }
  100% { transform: translate(0, 0); }
}
@keyframes firefly-glow { 0%, 100% { opacity: 0; } 50% { opacity: 1; } }

/* Magical Event Easter Egg Effects */
.magical-mist {
  position: absolute; inset: 0;
  background: linear-gradient(135deg, rgba(181, 157, 196, 0.15) 0%, rgba(126, 186, 118, 0.1) 50%, rgba(111, 166, 204, 0.1) 100%);
  mix-blend-mode: screen; animation: magical-mist-swirl 30s infinite linear alternate;
  opacity: 0; transition: opacity 2s ease-in-out; z-index: 5;
}
.weather-overlay.magical .magical-mist { opacity: 0.6; } /* Fade in */

.magical-glow {
  position: absolute; width: 6px; height: 6px; border-radius: 50%;
  background-color: rgba(255, 255, 220, 0.8);
  box-shadow: 0 0 6px rgba(255, 255, 200, 0.7);
  opacity: 0; animation: magical-glow-float 10s infinite ease-in-out;
  z-index: 5;
}
/* Generate multiple glows with different delays/positions in JS/TSX */
@keyframes magical-glow-float {
  0% { transform: translate(0, 0) scale(0.5); opacity: 0; }
  10%, 90% { opacity: 0.8; }
  100% { transform: translate(100px, -150px) scale(1); opacity: 0; }
}
@keyframes magical-mist-swirl { from { background-position: 0% 0%; } to { background-position: 100% 100%; } }

/* Spirit Entity Easter Egg */
.spirit-entity {
  position: absolute; width: 15px; height: 20px; /* Smaller spirits */
  background: radial-gradient(ellipse at center, rgba(200, 220, 255, 0.5) 0%, transparent 70%);
  border-radius: 50% 50% 30% 30% / 60% 60% 40% 40%; /* Wisp shape */
  opacity: 0; filter: blur(1px);
  animation: spirit-float var(--spirit-duration, 35s) linear infinite;
  z-index: 5;
}
@keyframes spirit-float {
  0% { transform: translate(0, 0) rotate(0deg); opacity: 0; }
  15% { opacity: var(--spirit-opacity, 0.4); } /* Use var for opacity */
  85% { opacity: var(--spirit-opacity, 0.4); }
  100% { transform: translate(var(--end-x, 150px), var(--end-y, -80px)) rotate(10deg); opacity: 0; }
}


/* Cloud Overlay */
.cloud-overlay {
  position: absolute; inset: 0;
  background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="200" height="100" viewBox="0 0 200 100"><defs><filter id="cloudblur"><feGaussianBlur stdDeviation="10"/></filter></defs><circle cx="50" cy="50" r="30" fill="rgba(255, 255, 255, 0.4)" filter="url(%23cloudblur)"/><circle cx="100" cy="40" r="40" fill="rgba(255, 255, 255, 0.3)" filter="url(%23cloudblur)"/><circle cx="150" cy="60" r="35" fill="rgba(255, 255, 255, 0.35)" filter="url(%23cloudblur)"/></svg>');
  background-size: 300px auto;
  background-repeat: repeat-x;
  animation: cloud-movement 120s infinite linear;
  opacity: 0.3;
  z-index: 4; /* Below rain/snow */
}
.weather-overlay.heavy .cloud-overlay { opacity: 0.6; }
@keyframes cloud-movement { from { background-position: 0 0; } to { background-position: -600px 0; } }