/* frontend/src/components/WeatherEffectsOverlay.css */
/* Whimsical, cozy, maybe slightly pixelated weather effects */

.weather-overlay {
  position: fixed; /* Use fixed to cover viewport */
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: 5;
  overflow: hidden;
  transition: background-color 1.5s ease, opacity 1.5s ease;
}

/* Base Time Overlay */
.time-overlay {
  position: absolute;
  inset: 0;
  transition: background-color 2s ease-in-out, opacity 2s ease-in-out;
  opacity: 0; /* Start transparent */
}
.time-overlay.day { background: linear-gradient(to bottom, rgba(173, 216, 230, 0.05), transparent 50%); opacity: 0.1; }
.time-overlay.night { background: linear-gradient(135deg, rgba(25, 25, 50, 0.25), rgba(46, 38, 70, 0.35)); opacity: 0.3; }

/* Seasonal Overlays */
.seasonal-overlay {
  position: absolute;
  inset: 0;
  mix-blend-mode: overlay; /* Soft blend */
  pointer-events: none;
  transition: opacity 2s ease;
  opacity: 0;
}
.spring-overlay { background: linear-gradient(to bottom, rgba(144, 238, 144, 0.06), transparent 50%); opacity: 0.6; }
.summer-overlay { background: linear-gradient(to bottom, rgba(255, 215, 0, 0.04), transparent 60%); opacity: 0.6; }
.fall-overlay { background: linear-gradient(to bottom, rgba(210, 105, 30, 0.06), transparent 55%); opacity: 0.7; }
.winter-overlay { background: linear-gradient(to bottom, rgba(173, 216, 230, 0.08), transparent 50%); opacity: 0.6; }

/* Rain Effect - Pixelated streaks */
.rain-container { position: absolute; inset: 0; }
.rain-drop {
  position: absolute;
  background-color: rgba(173, 216, 230, 0.6); /* Rain color */
  width: 2px; /* Pixel width */
  height: 10px; /* Pixel height */
  animation: rain-fall-pixel 0.8s linear infinite;
  image-rendering: pixelated; /* Force pixel look */
  opacity: 0;
  transform-origin: top;
}
.weather-overlay.light .rain-drop { height: 8px; animation-duration: 1s; width: 1px; }
.weather-overlay.heavy .rain-drop { height: 12px; width: 2px; animation-duration: 0.6s; background-color: rgba(173, 216, 230, 0.8); }

@keyframes rain-fall-pixel {
  from { transform: translateY(-20px) rotate(5deg); opacity: 0; }
  10% { opacity: 0.9; }
  to { transform: translateY(100vh) rotate(5deg); opacity: 0.9; } /* Persist slightly at end */
}

/* Thunder Flash - Quick bright flash */
.thunder-flash {
  position: absolute;
  inset: 0;
  background-color: rgba(230, 230, 255, 0);
  animation: thunder-quick 0.5s ease-out 1;
  z-index: 6;
}
@keyframes thunder-quick {
  0%, 100% { background-color: rgba(230, 230, 255, 0); }
  20%, 80% { background-color: rgba(230, 230, 255, 0.8); } /* Bright flash */
}

/* Fog Effect - Soft layered */
.fog-container {
  position: absolute;
  inset: 0;
  background: linear-gradient(to bottom,
      rgba(215, 215, 225, 0.1) 0%,
      rgba(215, 215, 225, 0.3) 40%,
      rgba(215, 215, 225, 0.5) 80%,
      rgba(215, 215, 225, 0.6) 100%);
  animation: fog-slow-drift 120s infinite linear alternate;
  opacity: 0.7;
}
.weather-overlay.light .fog-container { opacity: 0.4; }
.weather-overlay.heavy .fog-container { opacity: 0.9; background: linear-gradient(to bottom, rgba(215, 215, 225, 0.2) 0%, rgba(215, 215, 225, 0.4) 40%, rgba(215, 215, 225, 0.6) 80%, rgba(215, 215, 225, 0.7) 100%); }
@keyframes fog-slow-drift {
  from { transform: translateX(-5%); }
  to { transform: translateX(5%); }
}

/* Wind Effect - Gentle streaks */
.wind-container { position: absolute; inset: 0; }
.wind-particle {
  position: absolute;
  background: linear-gradient(to right, transparent, rgba(220, 225, 235, 0.3), transparent);
  width: 80px;
  height: 1px;
  opacity: 0;
  animation: wind-streak 4s ease-in-out infinite;
  border-radius: 1px;
}
.weather-overlay.light .wind-particle { width: 50px; animation-duration: 5s; }
.weather-overlay.heavy .wind-particle { width: 120px; animation-duration: 3s; background: linear-gradient(to right, transparent, rgba(225, 230, 240, 0.5), transparent); }
@keyframes wind-streak {
  0% { transform: translateX(-100px) skewX(-20deg); opacity: 0; }
  10%, 80% { opacity: 0.8; }
  100% { transform: translateX(100vw) skewX(-20deg); opacity: 0; }
}

/* Cloud Overlay - Soft, painterly clouds */
.cloud-overlay {
  position: absolute;
  inset: 0;
  background-image:
    radial-gradient(ellipse at 20% 30%, rgba(245, 245, 248, 0.3) 0%, transparent 60%),
    radial-gradient(ellipse at 70% 40%, rgba(245, 245, 248, 0.25) 0%, transparent 55%),
    radial-gradient(ellipse at 50% 70%, rgba(245, 245, 248, 0.2) 0%, transparent 50%);
  background-size: 400px 200px, 500px 250px, 300px 150px;
  background-repeat: repeat-x;
  animation: cloud-drift 180s infinite linear;
  opacity: 0.4;
}
.weather-overlay.heavy .cloud-overlay { opacity: 0.6; background-color: rgba(180, 180, 190, 0.1); }
.weather-overlay.night .cloud-overlay { filter: brightness(0.6); opacity: 0.2; }
@keyframes cloud-drift {
  from { background-position: 0% 0%, 100px 0%, 200px 0%; }
  to { background-position: 1500px 0%, 1600px 0%, 1700px 0%; }
}

/* Clear Night Effect (Stars) - Simple pixel stars */
.clear-night-overlay { position: absolute; inset: 0; }
.star {
  position: absolute;
  background-color: #FFF;
  width: 1px; /* Pixel stars */
  height: 1px;
  border-radius: 0; /* Square pixel */
  opacity: 0;
  animation: twinkle-pixel 6s infinite ease-in-out;
  box-shadow: 0 0 1px rgba(255, 255, 255, 0.5); /* Tiny glow */
  image-rendering: pixelated;
}
/* Override size based on prop calculation */
.star[style*="width: 2px"] { width: 2px; height: 2px; }
.star[style*="width: 3px"] { width: 3px; height: 3px; }

@keyframes twinkle-pixel {
  0%, 100% { opacity: 0.2; }
  50% { opacity: 0.8; }
}

/* Dry Effect - Heat shimmer */
.dry-overlay {
  position: absolute;
  inset: 0;
  background: linear-gradient(to bottom, rgba(214, 164, 76, 0.03), transparent 50%);
  /* Simple heat shimmer using backdrop filter if supported well */
  backdrop-filter: blur(0.5px) contrast(1.05);
  animation: heat-shimmer-subtle 5s infinite linear alternate;
  opacity: 0.3;
}

.dust-container { position: absolute; inset: 0; }
.dust-particle {
    position: absolute;
    background-color: rgba(214, 164, 76, 0.15); /* Dust color */
    border-radius: 50%;
    opacity: 0;
    animation: dust-float 15s infinite ease-in-out;
}
@keyframes dust-float {
  0% { transform: translate(0, 0) rotate(0deg); opacity: 0; }
  10%, 90% { opacity: var(--max-opacity, 0.3); } /* Use var for opacity */
  100% { transform: translate(var(--x-drift, 20px), var(--y-drift, -30px)) rotate(360deg); opacity: 0; }
}

@keyframes heat-shimmer-subtle {
  from { backdrop-filter: blur(0.5px) contrast(1.05); opacity: 0.3; }
  to { backdrop-filter: blur(1px) contrast(1.02); opacity: 0.4; }
}

/* Magical Mist */
.magical-mist {
  position: absolute;
  inset: 0;
  background: radial-gradient(ellipse at 60% 40%, rgba(181, 157, 196, 0.1) 0%, transparent 50%),
              radial-gradient(ellipse at 30% 70%, rgba(126, 186, 118, 0.08) 0%, transparent 60%);
  mix-blend-mode: screen;
  animation: magical-mist-swirl 80s infinite linear alternate;
  opacity: 0.6;
}
.weather-overlay.light .magical-mist { opacity: 0.4; }
.weather-overlay.heavy .magical-mist { opacity: 0.8; animation-duration: 60s; }
@keyframes magical-mist-swirl {
  from { background-position: 0% 0%, 100% 100%; filter: hue-rotate(0deg); }
  to { background-position: 100% 100%, 0% 0%; filter: hue-rotate(45deg); }
}

.magical-mist-container { position: absolute; inset: 0; }
.mist-particle {
    position: absolute;
    border-radius: 50%;
    background-color: rgba(220, 210, 240, 0.5); /* Light lavender */
    opacity: 0;
    filter: blur(1px);
    box-shadow: 0 0 6px rgba(181, 157, 196, 0.5);
    animation: mist-float 10s infinite ease-in-out;
}
@keyframes mist-float {
  0%, 100% { opacity: 0; transform: translateY(0) scale(0.5); }
  50% { opacity: 0.6; transform: translateY(-30px) scale(1.1); }
}


/* Snow Effect */
.snow-container { position: absolute; inset: 0; overflow: hidden; }
.snowflake {
  position: absolute;
  background-color: #fff;
  border-radius: 50%;
  opacity: 0;
  box-shadow: 0 0 3px rgba(255, 255, 255, 0.4);
  animation: snow-fall 12s linear infinite;
  /* Use CSS variable for horizontal drift */
}
.weather-overlay.light .snowflake { animation-duration: 15s; }
.weather-overlay.heavy .snowflake { animation-duration: 10s; }

@keyframes snow-fall {
  0% { transform: translateY(-20px) translateX(0) rotate(0deg); opacity: 0; }
  10% { opacity: 0.9; }
  100% { transform: translateY(100vh) translateX(var(--x-drift, 0px)) rotate(720deg); opacity: 0; }
}